using Gtk 4.0;
using Adw 1;

template $PreferencesDialog: Adw.PreferencesDialog {
  // width-request: 526;
  Adw.PreferencesPage {
    icon-name: "applications-system-symbolic";
    title: _("General");

    Adw.PreferencesGroup {
      title: _("Bottom Image");

      Adw.ExpanderRow use_builtin_icons_expander {
        title: _("Use a built-in bottom icon");
        expanded: bind use_builtin_icons_button.active;
        enable-expansion: bind use_builtin_icons_button.active;

        [suffix]
        CheckButton use_builtin_icons_button {
          tooltip-text: _("use the built-in bottom image");
          valign: center;
          active: true;
        }

        Adw.SwitchRow use_system_color {
          title: _("Use system folder color");
        }

        Adw.ComboRow select_bottom_color {
          title: _("Manually select folder color");

          model: StringList {
            strings [
              _("Blue"),
              _("Teal"),
              _("Green"),
              _("Yellow"),
              _("Orange"),
              _("Red"),
              _("Pink"),
              _("Purple"),
              _("Slate"),
              _("Custom"),
            ]
          };

          sensitive: bind use_system_color.active inverted;
        }

        Adw.ActionRow primary_color_row {
          title: _("Primary Folder Color");
          activatable-widget: primary_folder_color;

          [suffix]
          ColorDialogButton primary_folder_color {
            valign: center;
            margin-start: 5;
            rgba: "#A4CAEEFF";

            dialog: ColorDialog {
              with-alpha: false;
            };
          }
        }

        Adw.ActionRow secondary_color_row {
          visible: true;
          title: _("Secondary Folder Color");
          activatable-widget: secondary_folder_color;

          [suffix]
          ColorDialogButton secondary_folder_color {
            valign: center;
            margin-start: 5;
            rgba: "#438DE6FF";

            dialog: ColorDialog {
              with-alpha: false;
            };
          }
        }
      }

      Adw.ExpanderRow use_external_icon_expander {
        title: _("Use custom bottom icon");
        expanded: bind use_builtin_icons_button.active inverted;
        enable-expansion: bind use_builtin_icons_button.active inverted;

        [suffix]
        CheckButton use_external_icon_button {
          tooltip-text: _("use a custom bottom image");
          valign: center;
          group: use_builtin_icons_button;
        }

        Adw.ActionRow current_botton {
          subtitle: _("Currently set bottom icon");
        }

        Adw.ButtonRow select_default_bottom {
          title: _("Select bottom icon");
          action-name: "app.select_folder_settings";
          start-icon-name: "folder-open-symbolic";
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Drag and Drop");

      Adw.PreferencesGroup {
        Adw.SwitchRow meta_drop_switch {
          title: _("Enable drop during drag");
          subtitle: _("Enabling this option will allow you to import the current image as a layer by dragging and dropping the image back into iconic");
        }

        Adw.ExpanderRow default_dnd {
          title: _("Default drag-and-drop action");
          subtitle: _("By default, after dragging and dropping a file, you have to select a layer to paste it to. Here you can disable that pop-up");
          expanded: bind dnd_switch.active;
          enable-expansion: bind dnd_switch.active;

          [suffix]
          Switch dnd_switch {
            tooltip-text: _("Use a default drag and drop action");
            valign: center;
            active: false;
            action-name: "app.dnd_switch";
          }

          Adw.ActionRow {
            title: _("Always select top layer");
            activatable-widget: radio_button_top;

            Gtk.CheckButton radio_button_top {
              active: true;
              valign: center;
            }
          }

          Adw.ActionRow {
            title: _("Always select bottom layer");
            activatable-widget: radio_button_bottom;

            Gtk.CheckButton radio_button_bottom {
              group: radio_button_top;
              valign: center;
            }
          }
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Regeneration");

      Adw.PreferencesGroup {
        Adw.ExpanderRow {
          title: _("What is Regeneration?");
          activatable: false;

          ListBoxRow {
            activatable: false;

            [child]
            Label {
              wrap: true;
              selectable: true;
              valign: start;
              use-markup: true;
              margin-start: 10;
              margin-end: 10;
              label: _("Iconic is able to <i>Regenerate</i> compatible icons. It is the ability to change to color of the folder image after it has already been created when changing the system color theme.\
This is most useful in combination with for example <a href=\"https://github.com/dpejoh/Adwaita-colors\"><b>Adwaita Colors</b></a> which automatically changes the color of all folders based on the system accent color.\
After regeneration, it is likely required to log out and in again to see the changes");
            }
          }
        }

        Adw.SwitchRow automatic_regeneration {
          title: _("Regenerate automatically");
          subtitle: _("If enabled, folders will be automatically regenerated on system accent color change");
        }

        Adw.ExpanderRow strict_expander {
          title: _("Loose regeneration");
          subtitle: _("If enabled, Allow regeneration of folder icons that were made without the \"Use system folder color\" option enabled");
          expanded: false;
          enable-expansion: bind strict_regeneration.active;

          [suffix]
          Switch strict_regeneration {
            valign: center;
            active: false;
            action-name: "app.strict_regeneration";
          }

          Adw.SwitchRow ignore_custom {
            title: _("Ignore custom colored folders");
            subtitle: _("If enabled, folders with custom colors will not be regenerated");
          }
        }

        Adw.SwitchRow store_top_images {
          title: _("Store top images in cache");
          subtitle: _("If disabled, folder icons can't be regenerated for different system accent colors");
        }

        Adw.ActionRow cache_size {
          title: _("Currently used cache size");
          subtitle: "Unknown";

          styles [
            "property",
            "numeric",
          ]
        }

        Adw.ButtonRow browse_cache {
          title: _("Browse cached images");
          start-icon-name: "folder-open-symbolic";
          activated => $open_image_cache() swapped;
        }

        Adw.ButtonRow reset_top_cache {
          title: _("Remove all cached images");
          start-icon-name: "user-trash-symbolic";

          styles [
            "destructive-action",
          ]
        }
      }
    }

    Adw.PreferencesGroup advanced_settings {
      title: _("Advanced");

      Label {
        margin-top: 10;
        label: _("You can see these options because you have enabled the Devel profile");
        wrap: true;
        valign: start;

        styles [
          "subtitle",
          "warning",
        ]
      }

      Adw.SpinRow svg_image_size {
        title: _("Select size of SVG images");
        subtitle: _("SVG images will by default be converted to a 1024x1024 image. You can adjust that here");

        adjustment: Adjustment {
          lower: 1;
          upper: 102400;
          value: 1024;
          page-increment: 128;
          step-increment: 1;
        };
      }

      Adw.SpinRow thumbnail_image_size {
        title: _("Select size of Thumbnail images");
        subtitle: _("Thumbnail images will by default be converted to a 255x255 image. You can adjust that here");

        adjustment: Adjustment {
          lower: 1;
          upper: 102400;
          value: 255;
          page-increment: 10;
          step-increment: 1;
        };
      }
    }
  }
}
